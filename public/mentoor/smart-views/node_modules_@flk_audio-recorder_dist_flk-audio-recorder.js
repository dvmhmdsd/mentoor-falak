_Component({
                selector: 'flk-audio-recorder',
                c: 'AudioRecorder', // c for component name
                unique: false, // flag to determine if the component object will be unique or not
                observable: true,
                observe: ['recordIsEnabled','isRecording','record','stop'],
                children: {},
                render: function (component) {
                    let elcOQUf = eo('span',null,null,`class`,`audio-wrapper`);
let cndK4h5 = component.recordIsEnabled && ! component.isRecording;
this.setState('st5VZFx', cndK4h5);
let cndCo8I = component.isRecording;
this.setState('stkpK7T', cndCo8I);
let cnd0CVI = component.recordIsEnabled === false;
this.setState('stw9F4l', cnd0CVI);
if (cndK4h5) { 
let elDrddG = eo('button','f_3f',null, eventListeners, {onclick:[function(e) {var $el = this;component.record()}]},`title`,``,`class`,`record-btn`,`type`,`button`);
let eltKiwX = eo('i','ItBf',null,`class`,`${fas('microphone') + ' icon icon'}`);
ec('i');
ec('button');

                    setTimeout(function () {
                        let $el = elDrddG;
                        
            true && tippyTooltip($el, {arrow:true,content:`${trans('startRecording')}`});
        ;
                    }, 20);                
                }else if (cndCo8I) { 
let elLJ8XM = eo('button',null,null, eventListeners, {onclick:[function(e) {var $el = this;component.stop()}]},`type`,`button`,`class`,`recorder-container`);
let elfNE_r = eo('div',null,null,`class`,`outer`);
ec('div');
let elSOJoE = eo('div',null,null,`class`,`outer-2`);
ec('div');
let elyn2bB = eo('div',null,null,`class`,`icon-microphone`);
text(`Stop`);
ec('div');
ec('button');
}else if (cnd0CVI) { 
let elY8XZJ = eo('span',null,null,`class`,`red-text`);
text(`Microphone is disabled in your browser, please enable it to start recording.`);
ec('span');
}ec('span');

                    this.isReadyToGo();
                }
        });