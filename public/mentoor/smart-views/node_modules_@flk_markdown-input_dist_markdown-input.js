_Component({
                selector: 'markdown-input',
                c: 'MarkdownInput', // c for component name
                unique: false, // flag to determine if the component object will be unique or not
                observable: true,
                observe: ['classNam','preview','value','label','id','name','placeholder','required','error'],
                children: {},
                render: function (component) {
                    let elmZklW = eo('div',null,null,`class`,`markdown-input {{ component.classNamّّ|| '' }`);

                // let elmZklW = currentElement();

                if (! elmZklW.__rendered) {
                    elmZklW.__rendered = true;let el01Q1r = eo('div',null,null,`class`,`form-group`);
el01Q1r.cls = {'group-error': !!cfrmdlr.getError(component.name) };

            for (let className in el01Q1r.cls) {
                el01Q1r.classList.toggle(className, el01Q1r.cls[className]);
            }  
            let elq453a = eo('label',null,null,`for`,`${component.id}`);
text(trans(component.label));
let cndfGDy = component.required;
this.setState('stgMfuY', cndfGDy);
if (cndfGDy) { 
let eloQ_92 = eo('span','Qabf',null,`title`,`${trans(`required`)}`,`class`,`required`);
text(`*`);
ec('span');
}ec('label');
let el78HTR = eo('textarea',null,null, eventListeners, {oninput:[function(e) {component.value = this.value;},function(e) {let value = this.value.trim();if (component.required && Is.empty(value)) {return cfrmdlr.addError(component.name, 'required', trans('validation.required'));}return cfrmdlr.removeError(component.name);}],onready:[function(e) {var $el = this;component.preview($el)}]},`value`,`${fval(component.value)}`,`id`,`${component.id}`,`name`,`${(component.name).toInputName()}`,`placeholder`,`${component.placeholder}`,`type`,`textarea`);
component.input = el78HTR;
el78HTR.value = fval(component.value);
ec('textarea');

                    setTimeout(function () {
                        let $el = el78HTR;
                        component.preview($el);
                    }, 20);                
                let cndgnRC = cfrmdlr.getError(component.name);
this.setState('stPadum', cndgnRC);
if (cndgnRC) { 
let elqvglR = eo('div','IHqf',null,`class`,`error-msg`);
text(cfrmdlr.getError(component.name));
ec('div');
}ec('div');

                } else {
                    skip();
                }
            ec('div');
let cndn9ri = component.error;
this.setState('st0q8hp', cndn9ri);
if (cndn9ri) { 
let elzIXgu = eo('div','oWJf',null,`class`,`error-msg bold`);
text(component.error);
ec('div');
}
                    this.isReadyToGo();
                }
        });