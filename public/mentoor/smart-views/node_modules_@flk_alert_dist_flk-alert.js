_Component({
                selector: 'flk-alert',
                c: 'FlkAlert', // c for component name
                unique: false, // flag to determine if the component object will be unique or not
                observable: true,
                observe: ['display','id','headingTheme','heading','message','withInput','confirmBtnEl','errorMsg','inputPlaceholder','inputValue','type','close','closeBtn','confirm','confirmBtn'],
                children: {},
                render: function (component) {
                    let cndWubf = component.display;
this.setState('stX_QKI', cndWubf);
if (cndWubf) { 
let elCB0NV = eo('div','fvuf',null,`id`,`${component.id}`,`class`,`flk-alert`);
let elAjf9X = eo('div','jV_f',null,`class`,`alert-content`);
let eliQBRk = eo('div','l88f',null,`class`,`alert-heading ${ component.headingTheme }`);
text(component.heading);
ec('div');
let elFCoGw = eo('div','7YTf',null,`class`,`alert-message`);
text(component.message);
ec('div');
let cndv1sE = component.withInput;
this.setState('stOJr2A', cndv1sE);
if (cndv1sE) { 
let elAr8Hk = ev('input','ge0f',null, eventListeners, {oninput:[function(e) {component.inputValue = this.value;},function(e) {var $el = this;component.errorMsg = false;}],onkeyup:[function(e) {var $el = this;if (e.which == 13) component.confirmBtnEl.click();}]},`value`,`${fval(component.inputValue)}`,`placeholder`,`${component.inputPlaceholder}`,`type`,`text`,`class`,`input`);
elAr8Hk.value = fval(component.inputValue);

                    setTimeout(function () {
                        let $el = elAr8Hk;
                        
            if (true && ! elAr8Hk.focused) {
                elAr8Hk.setSelectionRange(elAr8Hk.value.length, elAr8Hk.value.length)
                elAr8Hk.focused = true;
                elAr8Hk.focus();
            }
        ;
                    }, 20);                
                }let cndoF4Q = component.errorMsg;
this.setState('st78D1J', cndoF4Q);
if (cndoF4Q) { 
let elN87Hy = eo('div','onTf',null,`class`,`red-text p-l1 bold text-left`);
text(trans('validation.required'));
ec('div');
}let elvtspR = eo('div',null,null,`class`,`alert-actions`);
let cndhedQ = component.type == 'confirm';
this.setState('st7FysO', cndhedQ);
let cndpgZm = component.type == 'inform';
this.setState('stScsKQ', cndpgZm);
if (cndhedQ) { 
let elSBBam = eo('button','5stf',null, eventListeners, {onclick:[function(e) {var $el = this;component.close()}]},`type`,`button`,`class`,`alert-close-btn`);
let elI5ryP = eo('i','Yy2f',null,`class`,`${fas('times') + ' icon'}`);
ec('i');
let elJ4_m9 = eo('span','5bLf');
text(component.closeBtn);
ec('span');
ec('button');
let elCJeKs = eo('button','f7Tf',null, eventListeners, {onclick:[function(e) {var $el = this;component.confirm()}],onready:[function(e) {var $el = this;component.confirmBtnEl = $el;}]},`type`,`button`,`class`,`alert-confirm-btn`);
let elMBCtT = eo('i','HOxf',null,`class`,`${fas('check') + ' icon'}`);
ec('i');
let elqfs9O = eo('span','x1Bf');
text(component.confirmBtn);
ec('span');
ec('button');

                    setTimeout(function () {
                        let $el = elCJeKs;
                        component.confirmBtnEl = $el;

            if (!component.withInput && ! elCJeKs.focused) {
                
                elCJeKs.focused = true;
                elCJeKs.focus();
            }
        ;
                    }, 20);                
                }else if (cndpgZm) { 
let eldFckU = eo('button',null,null, eventListeners, {onclick:[function(e) {var $el = this;component.close()}]},`type`,`button`,`class`,`alert-inform-btn`);
let elHqyL3 = eo('span');
text(component.confirmBtn);
ec('span');
ec('button');
}ec('div');
ec('div');
ec('div');
}
                    this.isReadyToGo();
                }
        });