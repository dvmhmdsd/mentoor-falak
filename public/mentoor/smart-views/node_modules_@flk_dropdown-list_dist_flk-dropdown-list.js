_Component({
                selector: 'flk-dropdown-list',
                c: 'DropDownList', // c for component name
                unique: false, // flag to determine if the component object will be unique or not
                observable: true,
                observe: ['theme','position','addtionalClasses','_closed','label','toggle','isRequired','imageable','currentImage','getHeading','getCheckedItems','name','searchable','getPlaceholder','searchFor','searching','itemsList','stopSelecting','isCheckedItem','changeStateOf','id','getInputType','multiple','error','errorClasses'],
                children: {},
                render: function (component) {
                    let elIwDhL = eo('div',null,null,`class`,`dropdown-list ${ component.theme }-t ${ component.position } ${ component.addtionalClasses }`);
component.dropdownContainer = elIwDhL;
elIwDhL.cls = {opened: ! component._closed};

            for (let className in elIwDhL.cls) {
                elIwDhL.classList.toggle(className, elIwDhL.cls[className]);
            }  
            let cndi5Th = component.label;
this.setState('strDrWr', cndi5Th);
if (cndi5Th) { 
let elwaZAS = eo('label','z9Mf',null, eventListeners, {onclick:[function(e) {var $el = this;component.toggle();}]});
let elQ9Rx6 = eo('span','Rt6f');
text(trans(component.label));
ec('span');
let cnd0GNH = component.isRequired;
this.setState('st8EGA_', cnd0GNH);
if (cnd0GNH) { 
let elVTjAJ = eo('span','Uebf',null,`class`,`required`);
text(`*`);
ec('span');
}ec('label');
}let el7olbs = eo('div',null,null,`class`,`select-list`);
let eljzWBv = eo('button',null,null, eventListeners, {onclick:[function(e) {var $el = this;component.toggle()}]},`type`,`button`,`class`,`heading`);
let cndLDMY = component.imageable && component.currentImage;
this.setState('stG4Tph', cndLDMY);
let cndDjno = !(cndLDMY);
this.setState('stQ1xqt', cndDjno);
if (cndLDMY) { 
let elwtCLe = ev('img','XEwf',null,`src`,`${component.currentImage}`,`title`,`${component.getHeading()}`,`alt`,`${component.getHeading()}`);
}let elPe1Qp = eo('span');
text(trans(component.getHeading()));
ec('span');
let cndTeYT = component._closed;
this.setState('stM75ku', cndTeYT);
let cndtvZp = !(cndTeYT);
this.setState('stcLAnH', cndtvZp);
if (cndTeYT) { 
let elWbe4g = eo('i','Fz9f',null,`class`,`${fas('caret-down') + ' arrow icon'}`);
ec('i');
}else { 
let elKGWHw = eo('i',null,null,`class`,`${fas('caret-up') + ' arrow icon'}`);
ec('i');
}ec('button');
let elMYtOK = ev('input',null,null,`type`,`hidden`);
component.staticInput = elMYtOK;
for (let i in component.getCheckedItems()) {
let itemValue = component.getCheckedItems()[i]; 
 let iicKMh = 'FVp2okq' + i;
let elo2S4P = ev('input','fqIbg_drKAha' + i+iicKMh,null, eventListeners, {oninput:[function(e) {itemValue = this.value;}]},`value`,`${fval(itemValue)}`,`name`,`${(component.name).toInputName()}`,`type`,`hidden`);
elo2S4P.value = fval(itemValue);
}
let elvO1ZR = eo('ul',null,null,`class`,`items-list`);
elvO1ZR.cls = {expanded: ! component._closed};

            for (let className in elvO1ZR.cls) {
                elvO1ZR.classList.toggle(className, elvO1ZR.cls[className]);
            }  
            let cnd67hR = component.searchable;
this.setState('stwEiOo', cnd67hR);
let cndfkCW = ! Is.null(component.itemsList) && Is.empty(component.itemsList);
this.setState('stpbLiH', cndfkCW);
if (cnd67hR) { 
let elV0FNJ = eo('li','9ehf',null,`class`,`list-item search-item`);
let elnaSYA = ev('input','bH3f',null, eventListeners, {oninput:[function(e) {var $el = this;component.searchFor($el.value)}]},`placeholder`,`${component.getPlaceholder().ucfirst()}`);
component.searchInput = elnaSYA;
elnaSYA.autocomplete = elnaSYA.name == 'password' && Is.browser('chrome') ? 'new-password' : 'off';
ec('li');
}let cndz_5e = component.searching;
this.setState('stY7518', cndz_5e);
let cndhelU = cndfkCW;
this.setState('stk7joB', cndhelU);
if (cndz_5e) { 
let elbb4zj = eo('div','Issf',null,`class`,`searching`);
text(trans('searching'));
ec('div');
}else if (cndhelU) { 
let elYg09C = eo('div',null,null,`class`,`empty-results`);
let elL8o0N = eo('span');
text(trans('noResults'));
ec('span');
ec('div');
}for (let index in component.itemsList) {
let item = component.itemsList[index]; 
 let ii8uAx = 'U8DHCaF' + index;
let elL5zRq = eo('li','F7wZK2H6Lv1g' + index+ii8uAx,null,`class`,`list-item`);
elL5zRq.cls = {disabled: component.stopSelecting == true && ! component.isCheckedItem(item), selected: component.isCheckedItem(item)};

            for (let className in elL5zRq.cls) {
                elL5zRq.classList.toggle(className, elL5zRq.cls[className]);
            }  
            let el5Ojjg = ev('input','lbpff'+ii8uAx,null, eventListeners, {oninput:[function(e) {item.value = this.value;}],onready:[function(e) {var $el = this;item.input = $el;}],onchange:[function(e) {var $el = this;component.changeStateOf($el, item)}]}, boolAttrs, {checked:component.isCheckedItem(item)},`value`,`${fval(item.value)}`,`id`,`item-${ index + component.id }`,`type`,`${ component.getInputType() }`);
el5Ojjg.value = fval(item.value);

                    setTimeout(function () {
                        let $el = el5Ojjg;
                        item.input = $el;;
                    }, 20);                
                let el2YQB3 = eo('label','gwjff'+ii8uAx,null, boolAttrs, {disabled:component.stopSelecting == true && ! component.isCheckedItem(item)},`for`,`item-${ index + component.id }`);
let cndcoB1 = component.multiple;
this.setState('stdoGog', cndcoB1);
if (cndcoB1) { 
let elk4ZtR = eo('span','xSxff'+ii8uAx,null,`class`,`checkbox`);
ec('span');
}let cndJ1c_ = component.imageable;
this.setState('stJs14H', cndJ1c_);
if (cndJ1c_) { 
let elTuYD8 = ev('img','6IGff'+ii8uAx,null,`src`,`${item.image}`,`title`,`${item.text}`,`alt`,`${item.text}`);
}let elPYKtv = eo('span','fPrff'+ii8uAx,null,`class`,`text`);
text(item.text);
ec('span');
ec('label');
ec('li');
}
ec('ul');
ec('div');
let cndcYUa = component.error;
this.setState('stRV6wY', cndcYUa);
if (cndcYUa) { 
let el6F0Wq = eo('div','emkf',null,`class`,`${ component.errorClasses }`);
text(component.error);
ec('div');
}ec('div');

                    this.isReadyToGo();
                }
        });